How OpenWrt interacts with MC(microcontollers), WEB, CLOUD, Mobile phones ... (using MQTT)

Let say we have a local water system(LWS) that we use for watering process and main water system to fill a tank.
The local water system will take water from the tank using its own pump.
To fill the tank we will use a bobber inside the tank. When level of water is lower then we set MC will recieve a signal to open a valve
for MWS. After the tank is filled out and bobber achieves top level we set MC will recieve a signal to close the valve for MWS.

Main components of LWS are tank, pump, set of valves and sensors. Various devices for the watering can be connected to valves through pipes or hoses.
Valves are handled by MC through relays. Sensors are connected to MC.


CRON
   OUTPUT
     - to WATERING send Begin/End for valves(by name ?)

plugin WATERING
   INPUT
     - from CRON Begin/End for valves
	 - from WEB/CLOUD Start/Stop signal for valve/valves(ALLSTOP/ALLSTART)  
	 - from MC
	      - change status after Begin/End command
		  - information from sensors
   OUTPUT    
     - to MC send Begin/End command (Start/Stop command should be analised and if nesessary transformed into Begin/End),
	    ???  analise information from some kind of sensors like rain starts, pump is on/of, bobber (to open/close valve from main water system);
	 - record to DB (directly or throughout separate driver)
	      - change valve's status after recieving from MC;
		  - write information from sensors;

MC
    INPUT
	  - from WATERING Begin/End command;
	OUTPUT
	  - to WATERING:
	      - change valve's status;
		  - send information from sensors;


WEB server
	OUTPUT
	  - to WATERING send Start/Stop for valves(by name ?)

CLOUD/MOBILE app
	OUTPUT
	  - to WATERING send Start/Stop for valves(by name ?)
    
		  
EMERGENCY system
    INPUT
	  - from NM (netowrk monitoring)
	  - from sensors (throughout MC)
	OUTPUT
	  - to Pushover/email throughout Mqttwarn



MC     microcontoller;
NM     netowrk monitoring;
LWS    local water system;
MWS    main water system;

--------------------------------------------------------------------------------------------------------------

!!!!!    on work now

plugin WATERING
   INPUT
     - from CRON Begin/End for valves
	 - from WEB/CLOUD Start/Stop signal for valve/valves(ALLSTOP/ALLSTART)  	 
	     if Begin:
		     update status to <RUNNING>
			 if ! is_stopped
			    (OUTPUT)push "Begin" message to MC
		 if End:
             update status to <IDLE>		 
             (OUTPUT)push "End" message to MC			 
		 if Start:
		     update is_stopped to N
		     if status == <IDLE>
			    (OUTPUT)push "Start" message to MC			    
         if Stop:
		     update is_stopped to Y 
		     if status == <RUNNING>
			    (OUTPUT)push "Stop" message to MC		
         if StopAll:
		     - update is_stopped to Y for all records
			 - stop devices if nesessary
         if StartAll:
		     - update is_stopped to N for all records
			 - start devices if nesessary
		 
         		 
             		 


   OUTPUT    
     - to MC send Begin/End command (Start/Stop command should be analised and if nesessary transformed into Begin/End),
	   analise information from some kind of sensors like rain starts, pump is on/of, bobber (to open/close valve from main water system);
